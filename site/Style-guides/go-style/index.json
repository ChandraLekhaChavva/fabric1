{
    "content": "<h2 id=\"coding-guidelines\">Coding guidelines</h2>\n<h3 id=\"coding-golang\">Coding Golang <a name=\"coding-go\"></a></h3>\n<p>We code in Go&trade; and strictly follow the <a href=\"http://golang.org/doc/effective_go.html\">best\npractices</a> and will not accept any\ndeviations. You must run the following tools against your Go code and fix all\nerrors and warnings:\n  - <a href=\"https://github.com/golang/lint\">golint</a>\n  - <a href=\"https://golang.org/cmd/vet/\">go vet</a>\n  - <a href=\"https://godoc.org/golang.org/x/tools/cmd/goimports\">goimports</a></p>\n<h2 id=\"generating-grpc-code\">Generating gRPC code <a name=\"gRPC\"></a></h2>\n<p>If you modify any <code>.proto</code> files, run the following command to generate/update\nthe respective <code>.pb.go</code> files.</p>\n<pre><code>cd $GOPATH/src/github.com/hyperledger/fabric\nmake protos\n</code></pre>\n\n<h2 id=\"adding-or-updating-go-packages\">Adding or updating Go packages</h2>\n<p>The Hyperledger Fabric Project uses Go 1.6 vendoring for package management.\nThis means that all required packages reside in the <code>vendor</code> folder within the\nfabric project. Go will use packages in this folder instead of the GOPATH when\nthe <code>go install</code> or <code>go build</code> commands are executed. To manage the packages in\nthe <code>vendor</code> folder, we use <a href=\"https://github.com/kardianos/govendor\">Govendor</a>,\nwhich is installed in the Vagrant environment. The following commands can be\nused for package management:</p>\n<pre><code>  # Add external packages.\n  govendor add +external\n\n  # Add a specific package.\n  govendor add github.com/kardianos/osext\n\n  # Update vendor packages.\n  govendor update +vendor\n\n  # Revert back to normal GOPATH packages.\n  govendor remove +vendor\n\n  # List package.\n  govendor list\n</code></pre>",
    "language": "en",
    "url": "/Style-guides/go-style/",
    "title": "Golang"
}