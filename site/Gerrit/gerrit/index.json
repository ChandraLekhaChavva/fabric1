{
    "content": "<h1 id=\"working-with-gerrit\">Working with Gerrit</h1>\n<p>Follow these instructions to collaborate on the Hyperledger Fabric Project\nthrough the Gerrit review system.</p>\n<p>Please be sure that you are subscribed to the <a href=\"http://lists.hyperledger.org/mailman/listinfo/hyperledger-fabric\">mailing\nlist</a> and of\ncourse, you can reach out on <a href=\"https://hyperledgerproject.slack.com/\">Slack</a> if\nyou need help.</p>\n<p>Gerrit assigns the following roles to users:</p>\n<ul>\n<li><strong>Submitters</strong>: May submit changes for consideration, review other code\n  changes, and make recommendations for acceptance or rejection by voting\n  +1 or -1, respectively.</li>\n<li><strong>Maintainers</strong>: May approve or reject changes based upon feedback from\n  reviewers voting +2 or -2, respectively.</li>\n<li><strong>Builders</strong>: (e.g. Jenkins) May use the build automation infrastructure to\n  verify the change.</li>\n</ul>\n<p>Maintainers should be familiar with the <a href=\"../reviewing/\">review process</a>. However,\nanyone is welcome to (and encouraged!) review changes, and hence may find that\ndocument of value.</p>\n<h2 id=\"git-review\">Git-review</h2>\n<p>There&rsquo;s a <strong>very</strong> useful tool for working with Gerrit called\n<a href=\"https://www.mediawiki.org/wiki/Gerrit/git-review\">git-review</a>. This\ncommand-line tool can automate most of the ensuing sections for you. Of course,\nreading the information below is also highly recommended so that you understand\nwhat&rsquo;s going on behind the scenes.</p>\n<h2 id=\"sandbox-project\">Sandbox project</h2>\n<p>We have created a <a href=\"https://gerrit.hyperledger.org/r/#/admin/projects/lf-sandbox\">sandbox\nproject</a> to allow\ndevelopers to familiarize themselves with Gerrit and our workflows. Please do\nfeel free to use this project to experiment with the commands and tools, below.</p>\n<h2 id=\"getting-deeper-into-gerrit\">Getting deeper into Gerrit</h2>\n<p>A comprehensive walk-through of Gerrit is beyond the scope of this document.\nThere are plenty of resources available on the Internet. A good summary can be\nfound <a href=\"https://www.mediawiki.org/wiki/Gerrit/Tutorial\">here</a>. We have also\nprovided a set of <a href=\"../best-practices/\">Best Practices</a> that you may find helpful.</p>\n<h2 id=\"working-with-a-local-clone-of-the-repository\">Working with a local clone of the repository</h2>\n<p>To work on something, whether a new feature or a bugfix:</p>\n<ol>\n<li>\n<p>Open the Gerrit <a href=\"https://gerrit.hyperledger.org/r/#/admin/projects/\">Projects page</a></p>\n</li>\n<li>\n<p>Select the project you wish to work on.</p>\n</li>\n<li>\n<p>Open a terminal window and clone the project locally using the <code>Clone with git\nhook</code> URL. Be sure that <code>ssh</code> is also selected, as this will make authentication\nmuch simpler:</p>\n</li>\n</ol>\n<pre><code>git clone ssh://LFID@gerrit.hyperledger.org:29418/fabric &amp;&amp; scp -p -P 29418 LFID@gerrit.hyperledger.org:hooks/commit-msg fabric/.git/hooks/\n</code></pre>\n\n<p><strong>Note:</strong> if you are cloning the fabric project repository, you will want to\nclone it to the <code>$GOPATH/src/github.com/hyperledger</code> directory so that it will\nbuild, and so that you can use it with the Vagrant <a href=\"../../dev-setup/devenv/\">development\nenvironment</a>.</p>\n<ol>\n<li>Create a descriptively-named branch off of your cloned repository</li>\n</ol>\n<pre><code>cd fabric\ngit checkout -b issue-nnnn\n</code></pre>\n\n<ol>\n<li>Commit your code. For an in-depth discussion of creating an effective commit,\nplease read <a href=\"../changes/\">this document</a>.</li>\n</ol>\n<pre><code>git commit -s -a\n</code></pre>\n\n<p>Then input precise and readable commit msg and submit.</p>\n<ol>\n<li>Any code changes that affect documentation should be accompanied by\ncorresponding changes (or additions) to the documentation and tests. This\nwill ensure that if the merged PR is reversed, all traces of the change will\nbe reversed as well.</li>\n</ol>\n<h2 id=\"submitting-a-change\">Submitting a Change</h2>\n<p>Currently, Gerrit is the only method to submit a change for review. <strong>Please review\nthe <a href=\"../changes/\">guidelines</a> for making and submitting a change</strong>.</p>\n<h3 id=\"use-git-review\">Use git review</h3>\n<p><strong>Note:</strong> if you prefer, you can use the <a href=\"#git-review\">git-review</a> tool instead\nof the following. e.g.</p>\n<p>Add the following section to <code>.git/config</code>, and replace <code>&lt;USERNAME&gt;</code> with your \ngerrit id.</p>\n<pre><code>[remote &quot;gerrit&quot;]\n    url = ssh://&lt;USERNAME&gt;@gerrit.hyperledger.org:29418/fabric.git\n    fetch = +refs/heads/*:refs/remotes/gerrit/*\n</code></pre>\n\n<p>Then submit your change with <code>git review</code>.</p>\n<pre><code>$ cd &lt;your code dir&gt;\n$ git review\n</code></pre>\n\n<p>When you update your patch, you can commit with <code>git commit --amend</code>, and then \nrepeat the <code>git review</code> command.</p>\n<h3 id=\"not-use-git-review\">Not Use git review</h3>\n<p>Directions for building the source code can be found <a href=\"../../dev-setup/build/\">here</a>.</p>\n<p>When a change is ready for submission, Gerrit requires that the\nchange be pushed to a special branch. The name of this special branch\ncontains a reference to the final branch where the code should reside,\nonce accepted.</p>\n<p>For the Hyperledger Fabric Project, the special branch is called <code>refs/for/master</code>.</p>\n<p>To push the current local development branch to the gerrit server, open a\nterminal window at the root of your cloned repository:</p>\n<pre><code>cd &lt;your clone dir&gt;\ngit push origin HEAD:refs/for/master\n</code></pre>\n\n<p>If the command executes correctly, the output should look similar to this:</p>\n<pre><code>Counting objects: 3, done.\nWriting objects: 100% (3/3), 306 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nremote: Processing changes: new: 1, refs: 1, done\nremote:\nremote: New Changes:\nremote:   https://gerrit.hyperledger.org/r/6 Test commit\nremote:\nTo ssh://LFID@gerrit.hyperledger.org:29418/fabric\n* [new branch]      HEAD -&gt; refs/for/master\n</code></pre>\n\n<p>The gerrit server generates a link where the change can be tracked.</p>\n<h2 id=\"adding-reviewers\">Adding reviewers</h2>\n<p>Optionally, you can add reviewers to your change.</p>\n<p>To specify a list of reviewers via the command line, add\n<code>%r=reviewer@project.org</code> to your push command. For example:</p>\n<pre><code>git push origin HEAD:refs/for/master%r=rev1@email.com,r=rev2@notemail.com\n</code></pre>\n\n<p>Alternatively, you can auto-configure GIT to add a set of reviewers if your\n   commits will have the same reviewers all at the time.</p>\n<p>To add a list of default reviewers, open the :file:<code>.git/config</code> file in the\n   project directory and add the following line in the <code>[ branch \u201cmaster\u201d ]</code>\n   section:</p>\n<pre><code>[branch &quot;master&quot;] #.... push =\nHEAD:refs/for/master%r=rev1@email.com,r=rev2@notemail.com`\n</code></pre>\n\n<p>Make sure to use actual email addresses instead of the <code>@email.com and @notemail.com</code>\naddressses. Don&rsquo;t forget to replace <code>origin</code> with your git remote name.</p>\n<h2 id=\"reviewing-using-gerrit\">Reviewing Using Gerrit</h2>\n<ul>\n<li>\n<p><strong>Add</strong>: This button allows the change submitter to manually add names of\n  people who should review a change; start typing a name and the system\n  will auto-complete based on the list of people registered and with\n  access to the system. They will be notified by email that you are\n  requesting their input.</p>\n</li>\n<li>\n<p><strong>Abandon</strong>: This button is available to the submitter only; it allows a\n  committer to abandon a change and remove it from the merge queue.</p>\n</li>\n<li>\n<p><strong>Change-ID</strong>: This ID is generated by Gerrit (or system). It becomes\n  useful when the review process determines that your commit(s) have to\n  be amended. You may submit a new version; and if the same Change-ID\n  header (and value) are present, Gerrit will remember it and present\n  it as another version of the same change.</p>\n</li>\n<li>\n<p><strong>Status</strong>: Currently, the example change is in review status, as indicated\n  by \u201cNeeds Verified\u201d in the upper-left corner. The list of\n  Reviewers will all emit their opinion, voting +1 if they agree to the\n  merge, -1 if they disagree. Gerrit users with a Maintainer role can\n  agree to the merge or refuse it by voting +2 or -2 respectively.</p>\n</li>\n</ul>\n<p>Notifications are sent to the email address in your commit message&rsquo;s\nSigned-off-by line. Visit your <a href=\"https://gerrit.hyperledger.org/r/#/dashboard/self\">Gerrit dashboard</a>, to check the progress of your requests.</p>\n<p>The history tab in Gerrit will show you the in-line comments and the author of\nthe review.</p>\n<h2 id=\"viewing-pending-changes\">Viewing Pending Changes</h2>\n<p>Find all pending changes by clicking on the <code>All --&gt; Changes</code> link in the\nupper-left corner, or <a href=\"https://gerrit.hyperledger.org/r/#/q/project:fabric\">open this link</a>.</p>\n<p>If you collaborate in multiple projects, you may wish to limit searching to\nthe specific branch through the search bar in the upper-right side.</p>\n<p>Add the filter <em>project:fabric</em> to limit the visible changes to\nonly those from the Hyperledger Fabric Project.</p>\n<p>List all current changes you submitted, or list just those changes in need\nof your input by clicking on <code>My --&gt; Changes</code> or <a href=\"https://gerrit.hyperledger.org/r/#/dashboard/self\">open this link</a></p>",
    "language": "en",
    "url": "/Gerrit/gerrit/",
    "title": "Gerrit"
}